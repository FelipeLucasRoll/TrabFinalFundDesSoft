Sending Mail from PHP Using SMTP Authentication - Example

<?php
 require_once "Mail.php";
 
 $from = "Sandra Sender <sender@example.com>";
 $to = "Ramona Recipient <recipient@example.com>";
 $subject = "Hi!";
 $body = "Hi,\n\nHow are you?";
 
 $host = "mail.example.com";
 $username = "smtp_username";
 $password = "smtp_password";
 
 $headers = array ('From' => $from,
   'To' => $to,
   'Subject' => $subject);
 $smtp = Mail::factory('smtp',
   array ('host' => $host,
     'auth' => true,
     'username' => $username,
     'password' => $password));
 
 $mail = $smtp->send($to, $headers, $body);
 
 if (PEAR::isError($mail)) {
   echo("<p>" . $mail->getMessage() . "</p>");
  } else {
   echo("<p>Message successfully sent!</p>");
  }
 ?>

°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°

Navegação: MXStudio » PHP » Envio de e-mail via SMTP autenticado usando PHP
Envio de e-mail via SMTP autenticado usando PHP

Devido ao grande número de Span que são enviados diariamente, gerando um grande consumo de recursos dos servidores, além da frustração e perda de tempo dos usuários finais, os servidores estão cada vez mais apertando o cerco contra esse tipo de prática, desenvolvendo algoritmos que alem de não conseguir broquear eficientemente esses e-mail acabam broqueando mensagem que podem ser importantes. Como por exemplo, o servidor IG, que além de ser o menos eficaz contra esse tipo de pratica, acaba não recebendo nenhum e-mail que não seja enviado por servidor SMTP autenticado. Prejudicando muito os desenvolvedores. Portanto através de uma classe SMTP simples é bastante útil vamos desenvolver um sistema para envio de e-mail com autenticação SMTP. Lembrando que apenas realizar o envio de e-mail autenticado não garante que o seu e-mail não seja classificado como Spam, já que isso não ocorrer, depende de diversos fatores como horário, conteúdo, quantidade, tamanho e etc. Eu utilizo essa classe e nunca tive problemas com nenhum servidor, funciona normalmente com IG, HOTMAIL, BOL, UOL, TERRA, Click21 e muitos outros.

Essa classe faz o envio de e-mails em formato de texto ou HTML. Faça o Download da Classe

Agora vamos fazer a inclusão da classe smtp.class.php que vai realizar a conexão e autenticação SMTP para que os e-mails possam ser enviados.

Se você estiver no modo de visualização do projeto mude para o modo de visualização do código.

Dentro do Bloco de código vamos fazer a inclusão da classe smtp.class.php através do comando include

<?php
include ("smtp.class.php");
?>

Com a classe já incluída agora vamos configurar a conexão SMTP que necessita de um endereço de servidor (host), usuário (user), senha (pass) e informar que será ativada a autenticação (debug) para que possa enviar os e-mails corretamente. Para fazer a configuração basta apenas declarar o valor das variáveis utilizada na classe com os seus dados.

<?php
include ("smtp.class.php");

/* Configuração da classe.smtp.php */
$host = “smtp.mail.yahoo.com.br”; /*host do servidor SMTP */
$smtp = new Smtp($host);
$smtp->user = “usuario”; /*usuario do servidor SMTP */
$smtp->pass = “senha”; /* senha dousuario do servidor SMTP*/
$smtp->debug =true; /* ativar a autenticação SMTP*/
?>

Para que a mensagem possa ser enviada ela deve conté um remetente ($from) que é o seu e-mail, um destinario ($to) que vai se o e-mail de quem vai receber, um assunto ($subject), e a mensagem ($msg), e depois devemos chamar a classe SMTP, passar as configurações e mandar enviar.

/* envia uma mensagem */
$from= "seuemail@seusite.com.br"; /* seu e-mail */
$to = "destinario@seusite.com.br"; /* o e-mail cadastrado*/
$subject = "Teste de e-mail utilizando SMTP"; /* assunto da mensagem */
$msg = "Você está recebendo esta mensagem de teste<br>";
$msg .= "Para confirma clique no link abaixo";
$smtp->Send($to, $from, $subject, $msg);/* faz o envio da mensagem */

Esse é apenas um exemplo, no e-mail do destinario você pode colocar uma variavel vinda de um formulario, ou vindo de um banco de dados. 